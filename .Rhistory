eco.in <- merge(CDAX, GfK, by = "Date")
load("~/hertie-election-forecasting (Akira)/data/election_dates.RData")
election_dates <- download.file('~/hertie-election-forecasting (Akira)/data/eletion_dates.RData')
?download.file
election_dates <- ?download.file('~/hertie-election-forecasting (Akira)/data', "election_dates")
rm(list = ls())
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/data/^cdax_d.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- ?download.file('~/hertie-election-forecasting (Akira)/data', "election_dates")
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
install.packages("dplyr", repos = "https://cran.rstudio.com/")
install.packages("psych", repos = "https://cran.rstudio.com/")
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
rm(list = ls())
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/data/^cdax_d.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- '~/hertie-election-forecasting (Akira)/data/election_dates.RData'
load(url(election_dates))
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
install.packages("dplyr", repos = "https://cran.rstudio.com/")
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
load(url(election_dates))
library("rio")
library(rio)
install.packages("rio")
library(rio)
import("~/hertie-election-forecasting (Akira)/data/election_dates.RData")
library(repmis)
install.packages("repmis")
library(repmis)
rm(list = ls())
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
install.packages("repmis")
library(repmis)
install.packages("repmis")
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/data/^cdax_d.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- source_data('~/hertie-election-forecasting (Akira)/data/election_dates.RData')
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
install.packages("repmis")
library(repmis)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/data/^cdax_d.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- source_data('~/hertie-election-forecasting (Akira)/data/election_dates.RData')
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
election_dates <- source_data('~/hertie-election-forecasting (Akira)/data/election_dates.RData')
library(RCurl)
install.packages("RCurl")
library(RCurl)
script <- getURL("~/hertie-election-forecasting (Akira)/data/election_dates.RData", ssl.verifypeer = FALSE)
election_dates <- source_data('~/hertie-election-forecasting (Akira)/data/election_dates.RData')
election_dates <- source_data('~/hertie-election-forecasting/data/election_dates.RData')
load("~/hertie-election-forecasting (Akira)/data/election_dates.RData")
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
par(mar = c(5,5,2,5))
with(eco.in, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(CDAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.39, col=c("red3", "blue3"))
GDP <- read.csv('~/hertie-election-forecasting (Akira)/DP_LIVE_26042017111042979.csv')
stock_GDP <- merge(CDAX, GDP, by = "Date")
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP growth (%)')
legend("topleft",
legend=c(expression(CDAX), "GDP growth (%)"),
lty=1:1, cex=0.39, col=c("red3", "blue3"))
View(stock_GDP)
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(stock_GDP, plot(as.Date(Date), Value, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP growth (%)')
legend("topleft",
legend=c(expression(CDAX), "GDP growth (%)"),
lty=1:1, cex=0.39, col=c("red3", "blue3"))
par(mar = c(5,5,2,5))
with(eco.in, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(CDAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
par(mar = c(5,5,2,5))
with(eco.in, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(CDAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(stock_GDP, plot(as.Date(Date), Value, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP growth (%)')
legend("topleft",
legend=c(expression(CDAX), "GDP growth (%)"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
with(stock_GDP, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(stock_GDP, plot(as.Date(Date), Value, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP growth (%)')
legend("topleft",
legend=c(expression(CDAX), "GDP growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
for (i in 1*22) {
stock_GDP$stock_gr <- stock_GDP[5, i]/stock_GDP[5, i+1]
}
for (i in 1:22) {
stock_GDP$stock_gr <- stock_GDP[5, i]/stock_GDP[5, i+1]
}
stock_GDP$stock_gr <- (stock_GDP[5, i]/stock_GDP[5, i+1]-1)
stock_GDP$stock_gr <- (stock_GDP[5, 1]/stock_GDP[5, 2]-1)
4/2
stock_GDP$stock_gr <- (stock_GDP[5, 1])/(stock_GDP[5, 2])-1
stock_GDP$stock_gr <- (stock_GDP[5, 1]) / (stock_GDP[5, 2])-1
stock_GDP%>%
mutate(stock_gr=log(Close/lag(Close,1)))
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth"),
ylim=c(0,1200))
stock_GDP%>%
mutate(stock_gr=log(Close/lag(Close,1)))
stock_GDP <- stock_GDP%>%
mutate(stock_gr=log(Close/lag(Close,1)))
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth"),
ylim=c(0,1200))
par(new = T)
with(stock_GDP, plot(as.Date(Date), Value, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP growth (%)')
legend("topleft",
legend=c("DAX quarterly growth", "GDP growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
stock_GDP <- stock_GDP%>%
mutate(stock_gr=log(Close/lag(Close,1)))
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth"),
ylim=c(0,1200))
par(new = T)
with(stock_GDP, plot(as.Date(Date), Value, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP growth (%)')
legend("topleft",
legend=c("DAX quarterly growth", "GDP growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
ccf(eco.in$Close, eco.in$Actual)
ccfvalues <- ccf(eco.in$Close, eco.in$Actual)
ccfvalues <- ccf(eco.in$Close, eco.in$Actual)
ccfvalues
vifvalues <- lm(Close ~ Actual, eco.in)
VIF(vifvalues)
library(VIF)
install.packages(VIF)
install.packages("VIF")
install.packages("VIF")
library(VIF)
VIF(vifvalues)
install.packages("VIF")
library(VIF)
install.packages("VIF")
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(VIF)
VIF(vifvalues)
install.packages("VIF", repos = "https://cran.rstudio.com/")
install.packages("VIF", repos = "https://cran.rstudio.com/")
library(VIF)
VIF(vifvalues)
vif(vifvalues)
vifvalues <- lm(Close ~ Actual, eco.in)
vif(vifvalues)
summary(vifvalues)
ccfvalues <- ccf(eco.in$Close, eco.in$Actual)
ccfvalues
DAX_GfK <- merge(CDAX, GfK, by = "Date")
View(DAX_GfK)
par(mar = c(5,5,2,5))
with(DAX_GfK, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(DAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(DAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
stock_GDP <- stock_GDP%>%
mutate(stock_gr=log(Close/lag(Close,1)))
par(mar = c(5,5,2,5))
with(stock_GDP, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(stock_GDP, plot(as.Date(Date), Value, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
par(mar = c(5,5,2,5))
with(eco.in, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(CDAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
ccfvalues <- ccf(DAX_GfK$Close, DAX_GfK$Actual)
ccfvalues
ccfvalues2 <- ccf(DAX_GfK$Close, DAX_GfK$Actual)
ccfvalues2
ccfvalues <- ccf(eco.in$Close, eco.in$Actual)
ccfvalues
base_data <- merge(eco.in, GFE_Kayser, by = "Date")
View(base_data)
View(eco.in)
base_data <- merge(eco.in, GFE_Kayser, by = "Date")
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)}, datalist)
base_data <- merge(eco.in, GFE_Kayser, by = "Date")
}
GFE.con <- merge(eco.in, GFE_Kayser, by = "Date")
View(GFE.con)
rm(list = ls())
source("packages.r")
source("functions.r")
char <- function(x) as.character(x)
num <- function(x) as.numeric(x)
char(123)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
recode_partynames <- function(x, longnames = FALSE)#longnames FALSE = choose a shorter version {
require(stringr)
x_recoded <- x %>% str_replace("cdu", "Union") %>%
str_replace("fdp", "FDP") %>%
str_replace("spd", "SPD") %>%
str_replace("gru", "Grüne") %>%
str_replace("lin", "Die Linke") %>%
str_replace("afd", "AfD") %>%
str_replace("oth", "Andere")
if(longnames == TRUE) {
x_recoded <- x_recoded %>% str_replace("Grüne", "B'90/Die Grünen") %>% str_replace("Union", "CDU/CSU") %>% str_replace("Linke", "Die Linke")
}
x_recoded
}
recode_partynames <- function(x, longnames = FALSE) #longnames FALSE = choose a shorter version {
require(stringr)
x_recoded <- x %>% str_replace("cdu", "Union") %>%
str_replace("fdp", "FDP") %>%
str_replace("spd", "SPD") %>%
str_replace("gru", "Grüne") %>%
str_replace("lin", "Die Linke") %>%
str_replace("afd", "AfD") %>%
str_replace("oth", "Andere")
if(longnames == TRUE) {
x_recoded <- x_recoded %>% str_replace("Grüne", "B'90/Die Grünen") %>% str_replace("Union", "CDU/CSU") %>% str_replace("Linke", "Die Linke")
}
x_recoded
}
election_dates <- load('~/hertie-election-forecasting/data/election_dates.RData') #not working
View(ge_df)
View(ger_df)
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
install.packages("dplyr", repos = "https://cran.rstudio.com/")
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
install.packages("repmis")
library(repmis)
install.packages("VIF", repos = "https://cran.rstudio.com/")
library(VIF)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/data/^cdax_d.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- load('~/hertie-election-forecasting/data/election_dates.RData') #not working
GDP <- read.csv('~/hertie-election-forecasting (Akira)/DP_LIVE_26042017111042979.csv')
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
stock_GDP <- merge(CDAX, GDP, by = "Date")
DAX_GfK <- merge(CDAX, GfK, by = "Date")
GFE.con <- merge(CDAX, GFE_Kayser, by = "Date")
install.packages("psych", repos = "https://cran.rstudio.com/")
install.packages("VIF", repos = "https://cran.rstudio.com/")
ger_df$spd_gov[ger_df$year == 2005]
source("packages.r")
source("functions.r")
load("./data/election_dates.RData")
election_date
election_year
ger_df <- read_dta("./data/ger_nat.dta")
ger_df$spd_gov[ger_df$year == 2005]
ger_df$spd_gov[ger_df$year == 2005] <- 1
names(ger_df)
ger_df$npd_share <- NULL
ger_df$npd_seats <- NULL
select(ger_df, ends_with("_share"), year)
select(-contains("gov_share"))
ger_df_long <- select(ger_df, ends_with("_share"), year) %>%
select(-contains("gov_share")) %>%
gather(key = "party", value = "voteshare")
ger_df_long$party <- str_replace(ger_df_long$party, "_share", "")
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
install.packages("repmis")
library(repmis)
install.packages("VIF", repos = "https://cran.rstudio.com/")
library(VIF)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/data/^cdax_d.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- load('~/hertie-election-forecasting/data/election_dates.RData') #not working
GDP <- read.csv('~/hertie-election-forecasting (Akira)/DP_LIVE_26042017111042979.csv')
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
eco.in <- merge(CDAX, GfK, by = "Date")
stock_GDP <- merge(CDAX, GDP, by = "Date")
DAX_GfK <- merge(CDAX, GfK, by = "Date")
GFE.con <- merge(CDAX, GFE_Kayser, by = "Date")
install.packages("dplyr", repos = "https://cran.rstudio.com/")
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
install.packages("repmis")
install.packages("psych", repos = "https://cran.rstudio.com/")
install.packages("VIF", repos = "https://cran.rstudio.com/")
install.packages("psych", repos = "https://cran.rstudio.com/")
install.packages("repmis")
install.packages("VIF", repos = "https://cran.rstudio.com/")
install.packages("VIF", repos = "https://cran.rstudio.com/")
par(mar = c(5,5,2,5))
with(eco.in, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab=expression(CDAX)),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(CDAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
ccfvalues <- ccf(eco.in$Close, eco.in$Actual)
ccfvalues
vifvalues <- lm(Close ~ Actual, eco.in)
summary(vifvalues)
vif(vifvalues)
?merge
