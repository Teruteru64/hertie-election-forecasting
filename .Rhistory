at = CDAX2$Date %in% locs
at = at & format(CDAX2$Date, '%m') %in% c('03', '06', '09', '12')
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3$stock_gr <- as.numeric(CDAX3$Close)/lag(as.numeric(CDAX3$Close,1)-1)*100
par(mar = c(5,5,2,5))
with(CDAX3, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
m <- lm(outgovshare ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
m1 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
m2 <- lm(outgovshare ~ nine_month + prelecshare + pid + logterms, GFE_Kayser)
m3 <- lm(outgovshare ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser)
summary(m)
summary(m1)
summary(m2)
m3 <- lm(outgovshare ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser)
summary(m3)
m2 <- lm(outgovshare ~ nine_month + prelecshare + pid + logterms, GFE_Kayser)
m4 <- lm(outgovshare ~ election_date + prelecshare + pid + logterms, GFE_Kayser)
summary(m4)
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/^CDAXX.csv")
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/^CDAXX.csv")
StockHist <- read.csv("~/hertie-election-forecasting (Akira)/Tab__01_Aktienindex__Dividendenrendite__Performance-Index__Index_der_Lebenshaltungskosten__Realer_Pe.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- load('~/hertie-election-forecasting/data/election_dates.RData')
GDP <- read.csv('~/hertie-election-forecasting (Akira)/CLVMNACSCAB1GQDE.csv')
GDP$Date <- ymd(as.character(GDP$DATE))
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
DAX_GfK <- merge(DAX, GfK, by = "Date")
GFE.con <- merge(CDAX, GFE_Kayser, by = "Date")
install.packages("xts")
library(xts)
CDAX2 <- CDAX[endpoints(CDAX$Date, on = "months"), ]
locs <- tapply(X=CDAX2$Date, FUN=min, INDEX=format(CDAX2$Date, '%Y%m'))
t(t(locs))
at = CDAX2$Date %in% locs
at = at & format(CDAX2$Date, '%m') %in% c('03', '06', '09', '12')
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3$stock_gr <- as.numeric(CDAX3$Close)/lag(as.numeric(CDAX3$Close,1)-1)*100
par(mar = c(5,5,2,5))
with(CDAX3, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
install.packages("xts")
CDAX2 <- CDAX[endpoints(CDAX$Date, on = "months"), ]
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/^CDAXX.csv")
CDAX2 <- CDAX[endpoints(CDAX$Date, on = "months"), ]
CDAX2 <- CDAX[endpoints(as.Date(CDAX$Date), on = "months"), ]
View(CDAX2)
CDAX$Date <- ymd(as.character(CDAX$Date))
View(CDAX)
CDAX2 <- CDAX[endpoints(CDAX$Date, on = "months"), ]
View(CDAX2)
locs <- tapply(X=CDAX2$Date, FUN=min, INDEX=format(CDAX2$Date, '%Y%m'))
t(t(locs))
at = CDAX2$Date %in% locs
at = at & format(CDAX2$Date, '%m') %in% c('03', '06', '09', '12')
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3$stock_gr <- as.numeric(CDAX3$Close)/lag(as.numeric(CDAX3$Close,1)-1)*100
par(mar = c(5,5,2,5))
with(CDAX3, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
View(CDAX3)
CDAX3$stock_gr <- as.numeric(CDAX3$Close)/lag(as.numeric(CDAX3$Close,1)-1
CDAX3$stock_gr <- as.numeric(CDAX3$Close)/lag(as.numeric(CDAX3$Close,1))-1
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3$stock_gr <- as.numeric(CDAX3$Close)/lag(as.numeric(CDAX3$Close,1))-1
CDAX3$stock_gr <- diff(CDAX3$Close)/(CDAX3$Close)[-length(CDAX3$Close)]
CDAX3$stock_gr <- diff(CDAX3$Close)/(CDAX3$Close)[-length(CDAX3$Close)]
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3 %>% mutate(diff = Close - lag(Close), stock_gr = diff / lag(Close) * 100)
CDAX$Close <- as.numeric(CDAX$Close)
CDAX3 %>% mutate(diff = Close - lag(Close), stock_gr = diff / lag(Close) * 100)
CDAX3 %>% mutate(diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3 %>% mutate(diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
CDAX$stock_gr <- CDAX3 %>% mutate(diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
?mutate
CDAX$stock_gr <- mutate(CDAX3, diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
CDAX$stock_gr <- mutate(CDAX3, diff = Close - lag(Close), stock_gr = diff / lag(Close) * 100)
CDAX3$stock_gr <- mutate(CDAX3, diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
View(CDAX3)
View(CDAX3)
write.table(CDAX3)
?write.table
write.csv(CDAX3)
write.csv(CDAX3, na = 'NA')
write.csv(CDAX3, na = 'NA', row.names = TRUE, col.names = TRUE)
write.csv(CDAX3, file = "CDAX Quarterly")
write.csv(data.frame(CDAX3), file = "CDAX Quarterly")
library(devtools)
install.packages("devtools")
library(devtools)
source_gist(4205477) #loads the function
source_gist(4205477) #loads the function
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/^CDAXX.csv")
CDAX$Date <- ymd(as.character(CDAX$Date))
CDAX$X3M_before <- ymd(as.character(CDAX$X3M_before))
CDAX$X6M_before <- ymd(as.character(CDAX$X6M_before))
CDAX$X9M_before <- ymd(as.character(CDAX$X9M_before))
CDAX$X12_before <- ymd(as.character(CDAX$X12_before))
GFE.con <- merge(CDAX, GFE_Kayser, by = "Date")
install.packages("xts")
library(xts)
install.packages("xts")
CDAX2 <- CDAX[endpoints(CDAX$Date, on = "months"), ]
locs <- tapply(X=CDAX2$Date, FUN=min, INDEX=format(CDAX2$Date, '%Y%m'))
t(t(locs))
at = at & format(CDAX2$Date, '%m') %in% c('03', '06', '09', '12')
at = CDAX2$Date %in% locs
at = at & format(CDAX2$Date, '%m') %in% c('03', '06', '09', '12')
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3$stock_gr <- mutate(CDAX3, diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3$stock_gr <- mutate(CDAX3, diff = as.numeric(Close) - lag(as.numeric(Close)), stock_gr = diff / lag(as.numeric(Close)) * 100)
CDAX3$stock_gr <- mutate(CDAX3, diff = as.numeric("Close") - lag(as.numeric("Close")), stock_gr = diff / lag(as.numeric("Close")) * 100)
CDAX3 <- CDAX2[which(at == TRUE),]
CDAX3 <- subset(CDAX3, Date > as.Date("1991-01-01"))
CDAX3$stock_gr <- ((as.numeric(CDAX3$Close) - lag(as.numeric(CDAX3$Close))) / lag(as.numeric(CDAX3$Close))) * 100
par(mar = c(5,5,2,5))
with(CDAX3, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
View(GDP)
ccfvalues <- ccf(CDAX$stock_gr, GDP$GDP_growth, na.action = na.pass)
par(mar = c(5,5,2,5))
with(CDAX3, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
ccfvalues <- ccf(CDAX$stock_gr, GDP$GDP_growth, na.action = na.pass)
CDAX_GDP <- merge(CDAX3, GDP, by = "Date", all = TRUE)
View(CDAX_GDP)
ccfvalues <- ccf(CDAX_GDP$stock_gr, CDAX_GDP$GDP_growth, na.action = na.pass)
ccfvalues
ccfvalues <- ccf(CDAX_GDP$stock_gr, CDAX_GDP$GDP_growth, na.action = na.pass)
ccfvalues
read.csv(CDAX_GDP, file = "read.csv")
read.csv(CDAX_GDP, file = "CDAX_GDP.csv")
setwd("C/Users/Teruteru/hertie-election-forecasting (Akira)")
write.csv(CDAX_GDP, file = "CDAX_GDP.csv")
par(mar = c(5,5,2,5))
with(DAX_GfK, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab= "DAX"),
ylim=c(0,1200))
par(new = T)
with(eco.in, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(DAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
par(mar = c(5,5,2,5))
with(DAX_GfK, plot(as.Date(Date), Close, type="l", col="red3",
xlab="Year", ylab= "DAX"),
ylim=c(0,1200))
par(new = T)
with(DAX_GfK, plot(as.Date(Date), Actual, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GfK Consumer Confidence')
legend("topleft",
legend=c(expression(DAX), "GfK Consumer Confidence"),
lty=1:1, cex=0.75, col=c("red3", "blue3"))
ccfvalues2 <- ccf(DAX_GfK$Close, DAX_GfK$Actual)
ccfvalues2
write.csv(CDAX3, file = "CDAX_quarterly.csv")
write.csv(GDP, file = "GDP")
write.csv(GDP, file = "GDP.csv")
library(readr)
CDAX_quarterly <- read_csv("~/hertie-election-forecasting (Akira)/CDAX_quarterly.csv")
View(CDAX_quarterly)
GDP <- read_csv("~/hertie-election-forecasting (Akira)/GDP.csv")
View(GDP)
GDP$Date <- ymd(as.character(GDP$DATE))
CDAX_quarterly$Date <- ymd(as.character(CDAX_quarterly$Date))
par(mar = c(5,5,2,5))
with(CDAX_quarterly, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
CDAX_GDP <- merge(CDAX_quarterly, GDP, by = "Date", all = TRUE)
ccfvalues <- ccf(CDAX_quarterly$stock_gr, CDAX_GDP$GDP_growth, na.action = na.pass)
ccfvalues
ccfvalues <- ccf(CDAX_quarterly$stock_gr, CDAX_GDP$GDP_growth, na.action = na.pass)
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
?glm
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, family = binomial(link = "logit"), GFE_Kayser)
s1 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
s <- lm(outgovshare ~ election_date + prelecshare + pid + logterms, GFE_Kayser)
s1 <- lm(outgovshare ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
s2 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
s3 <- lm(outgovshare ~ nine_month + prelecshare + pid + logterms, GFE_Kayser)
s4 <- lm(outgovshare ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser)
summary(s)
s1 <- lm(outgovshare ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
summary(s1)
summary(s2)
summary(s1)
summary(s3)
summary(s4)
summary(s2)
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m1 <- glm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
m2 <- glm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m3 <- glm(incumbent_win ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m4 <- glm(incumbent_win ~ election_date + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
summary(s)
summary(s1)
summary(s2)
summary(s3)
summary(s4)
library(arm)
install.packages("arm")
library(arm)
m <- bayesglm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family="binomial")
m1 <- bayesglm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family="binomial")
m2 <- bayesglm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family="binomial")
m3 <- bayesglm(incumbent_win ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser,  family="binomial")
m4 <- bayesglm(incumbent_win ~ election_date + prelecshare + pid + logterms, GFE_Kayser,  family="binomial")
summary(m1)
m1 <- bayesglm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family="binomial")
summary(m2)
summary(m3)
summary(m4)
s <- lm(outgovshare ~ election_date + prelecshare + pid + logterms, GFE_Kayser)
s1 <- lm(outgovshare ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
s2 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
s3 <- lm(outgovshare ~ nine_month + prelecshare + pid + logterms, GFE_Kayser)
s4 <- lm(outgovshare ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser)
summary(m4)
summary(m4)
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m1 <- bayesglm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
m2 <- bayesglm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m3 <- bayesglm(incumbent_win ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m4 <- bayesglm(incumbent_win ~ election_date + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m1 <- glm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
m2 <- glm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m3 <- glm(incumbent_win ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m4 <- glm(incumbent_win ~ election_date + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
summary(m4)
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m1 <- glm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
m2 <- glm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m3 <- glm(incumbent_win ~ twelve_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m4 <- glm(incumbent_win ~ election_date + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
summary(m2)
library(stargazer)
?stargazer
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
master <- merge(CDAX, GFE_Kayser, by = "Date")
View(master)
View(GFE_Kayser)
View(GFE_Kayser)
s2 <- lm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
t2 <- lm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
summary(t2)
m2 <- glm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
summary(m2)
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
m2 <- glm(incumbent_win ~ nine_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
summary(m2)
m <- glm(incumbent_win ~ three_month + prelecshare + pid + logterms, GFE_Kayser,  family = binomial(link = logit))
m1 <- glm(incumbent_win ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
summary(m1)
summary(m)
s1 <- lm(outgovshare ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
s2 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
summary(s1)
summary(s2)
s3 <- lm(outgovshare ~ nine_month + prelecshare + pid + logterms, GFE_Kayser)
summary(s3)
summary(s2)
library(knitr)
opts_chunk$set(message = FALSE, error = TRUE, fig.pos = 'H', tidy.opts=list(width.cutoff=65), tidy=TRUE, fig.path='figs/', cache.path='cache/graphics-',
fig.align='center', fig.width = 5, fig.height = 4, fig.show = 'hold',
cache = TRUE, par = TRUE)
library(foreign) #read foreign file objects
install.packages("dplyr", repos = "https://cran.rstudio.com/")
library(dplyr) #manipulate data
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
library(ggplot2) #plot results
install.packages("psych", repos = "https://cran.rstudio.com/")
library(psych) #create summary statistics
library(plyr) #tools for splitting, qpplying and combining data
library(data.table)
require(haven)
library(lubridate)
install.packages("repmis")
library(repmis)
library(data.table)
library(magrittr)
library(stargazer)
DAX <- fread('https://chart.finance.yahoo.com/table.csv?s=%5EGDAXI&a=10&b=26&c=1990&d=3&e=27&f=2017&g=d&ignore=.csv')
CDAX <- read.csv("~/hertie-election-forecasting (Akira)/^CDAXX.csv")
install.packages("dplyr", repos = "https://cran.rstudio.com/")
install.packages("ggplot2", repos = "https://cran.rstudio.com/")
install.packages("psych", repos = "https://cran.rstudio.com/")
install.packages("repmis")
CDAX$Date <- ymd(as.character(CDAX$Date))
CDAX$X3M_before <- ymd(as.character(CDAX$X3M_before))
CDAX$X6M_before <- ymd(as.character(CDAX$X6M_before))
CDAX$X9M_before <- ymd(as.character(CDAX$X9M_before))
CDAX$X12_before <- ymd(as.character(CDAX$X12_before))
library(readr)
CDAX_quarterly <- read_csv("~/hertie-election-forecasting (Akira)/CDAX_quarterly.csv")
CDAX_quarterly$Date <- ymd(as.character(CDAX_quarterly$Date))
StockHist <- read.csv("~/hertie-election-forecasting (Akira)/Tab__01_Aktienindex__Dividendenrendite__Performance-Index__Index_der_Lebenshaltungskosten__Realer_Pe.csv")
GfK <- read.csv('~/hertie-election-forecasting (Akira)/GfK.csv')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE <- read_dta('~/hertie-election-forecasting (Akira)/data/ger_nat.dta')
election_dates <- load('~/hertie-election-forecasting/data/election_dates.RData')
GDP <- read_csv("~/hertie-election-forecasting (Akira)/GDP.csv")
GDP$Date <- ymd(as.character(GDP$DATE))
GFE$Date <- election_date
GFE$Date <- ymd(as.character(GFE$Date))
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
DAX_GfK <- merge(DAX, GfK, by = "Date")
install.packages("repmis")
install.packages("psych", repos = "https://cran.rstudio.com/")
View(StockHist)
install.packages("psych", repos = "https://cran.rstudio.com/")
View(StockHist)
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
View(GFE_Kayser)
pre1969 <- subset(GFE_Kayser, Date < as.Date("1965-09-19"))
after1969 <- subset(CDAX3, Date >= as.Date("1965-09-19"))
pre1969.glm <- glm(incumbent_win ~ history, pre1969,  family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history,  family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
after1969 <- subset(CDAX3, Date >= as.Date("1965-09-19"))
pre1969 <- subset(GFE_Kayser, Date < as.Date("1965-09-19"))
pre1969.glm <- glm(incumbent_win ~ history, pre1969,  family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history, after1969, family = binomial(link = logit))
pre1969.glm <- glm(incumbent_win ~ history + prelecshare + logterms, pre1969,  family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history + prelecshare + logterms, after1969, family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history + prelecshare + logterms, pre1969)
after1969.lm <- lm(outgovshare ~ history + prelecshare + logterms, after1969)
View(after1969)
after1969 <- subset(GFE_Kayser, Date >= as.Date("1965-09-19"))
pre1969.glm <- glm(incumbent_win ~ history, pre1969,  family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history, after1969, family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
summary(pre1969.glm)
pre1969.glm <- glm(incumbent_win ~ history + prelecshare + logterms, pre1969,  family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history + prelecshare + logterms, after1969, family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history + prelecshare + logterms, pre1969)
after1969.lm <- lm(outgovshare ~ history + prelecshare + logterms, after1969)
summary(pre1969.glm)
after1969.glm <- glm(incumbent_win ~ history + prelecshare + logterms, after1969, family = binomial(link = logit))
summary(after1969.glm)
summary(pre1969.lm)
summary(after1969.lm)
pre1969.glm <- glm(incumbent_win ~ history,  family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history, after1969, family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
pre1969 <- subset(GFE_Kayser, Date < as.Date("1965-09-19"))
pre1969.glm <- glm(incumbent_win ~ history,  family = binomial(link = logit))
View(pre1969)
pre1969.glm <- glm(incumbent_win ~ history,  family = binomial(link = logit))
pre1969 <- subset(GFE_Kayser, Date < as.Date("1965-09-19"))
after1969 <- subset(GFE_Kayser, Date >= as.Date("1965-09-19"))
pre1969.glm <- glm(incumbent_win ~ history,  family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
summary(pre1969.lm)
summary(after1969.lm)
pre1969.glm <- glm(incumbent_win ~ history, pre1969, family = binomial(link = logit))
summary(pre1969.glm)
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
pro_CDU <- glm(pro_CDU ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
summary(pro_CDU)
pro_CDU2 <- lm(pro_CDU ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
summary(pro_CDU2)
pre1969.glm <- glm(incumbent_win ~ history, pre1969, family = binomial(link = logit))
summary(pre1969.glm)
View(pre1969)
View(after1969)
pre1969[1,6]<-1
pre1969.glm <- glm(incumbent_win ~ history, pre1969, family = binomial(link = logit))
after1969.glm <- glm(incumbent_win ~ history, after1969, family = binomial(link = logit))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
summary(pre1969.glm)
summary(pre1969.lm)
pro_CDU <- glm(pro_CDU ~ six_month + prelecshare + pid + logterms, GFE_Kayser, family = binomial(link = logit))
summary(pro_CDU)
pro_CDU2 <- lm(pro_CDU ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
summary(pro_CDU2)
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
pre1969 <- subset(GFE_Kayser, Date < as.Date("1965-09-19"))
after1969 <- subset(GFE_Kayser, Date >= as.Date("1965-09-19"))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
summary(pre1969.lm)
GFE_Kayser <- read_dta('~/hertie-election-forecasting (Akira)/BundestagForecastReplicationData.dta')
GFE_Kayser$Date <- as.Date(GFE_Kayser$date, "%d.%m.%Y")
pre1969 <- subset(GFE_Kayser, Date < as.Date("1965-09-19"))
after1969 <- subset(GFE_Kayser, Date >= as.Date("1965-09-19"))
pre1969.lm <- lm(outgovshare ~ history, pre1969)
after1969.lm <- lm(outgovshare ~ history, after1969)
summary(pre1969.lm)
summary(pre1969.lm)
summary(after1969.lm)
par(mar = c(5,5,2,5))
with(CDAX_quarterly, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("DAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
CDAX_GDP <- merge(CDAX_quarterly, GDP, by = "Date", all = TRUE)
par(mar = c(5,5,2,5))
with(CDAX_quarterly, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)"),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("CDAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
CDAX_GDP <- merge(CDAX_quarterly, GDP, by = "Date", all = TRUE)
par(mar = c(5,5,2,5))
with(CDAX_quarterly, plot(as.Date(Date), stock_gr, type="l", col="red3",
xlab="Year", ylab= "CDAX quarterly growth (%)", cex=1.2),
ylim=c(0,1200))
par(new = T)
with(GDP, plot(as.Date(Date), GDP_growth, type="l", axes=F, col="blue3", xlab="Year", ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'GDP quarterly growth (%)')
legend("topleft",
legend=c("CDAX quarterly growth (%)", "GDP quarterly growth (%)"),
lty=1:1, cex=0.50, col=c("red3", "blue3"))
CDAX_GDP <- merge(CDAX_quarterly, GDP, by = "Date", all = TRUE)
View(CDAX_GDP)
ccfvalues <- ccf(CDAX_quarterly$stock_gr, CDAX_GDP$GDP_growth, na.action = na.pass)
ccfvalues
ccfvalues <- ccf(CDAX_quarterly$stock_gr, CDAX_GDP$GDP_growth, na.action = na.pass)
ccfvalues
m1 <- lm(outgovshare ~ three_month + prelecshare + pid + logterms, GFE_Kayser)
m2 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
summary(m1)
m2 <- lm(outgovshare ~ six_month + prelecshare + pid + logterms, GFE_Kayser)
summary(m2)
summary(m1)
summary(m2)
