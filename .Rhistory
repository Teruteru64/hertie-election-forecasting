"stringr", # for string processing
"ggplot2", # for graphics
"tidyr", # for tidying data frames
"broom", # for tidying model output
"janitor", # for basic data tidying and examinations
"reshape2"
)
packages <- rownames(installed.packages())
p_to_install <- p_needed[!(p_needed %in% packages)]
if (length(p_to_install) > 0) {
install.packages(p_to_install)
}
lapply(p_needed, require, character.only = TRUE)
# make df long
ger_df_long <- select(ger_df, ends_with("_share"), year) %>%
select(-contains("gov_share")) %>%
gather(key = "party", value = "voteshare")
voteshare_vars <- str_subset(names(ger_df), "^(?!.*gov).*_share$")
gov_vars <- str_subset(names(ger_df), "_gov$")
ger_df_long <- melt(ger_df, id.vars = c("year", "turnout", "chancellor", "unemp", "chancellor_polls", "term", gov_vars) , measure.vars = voteshare_vars, value.name = "voteshare")
ger_df_long <- rename(ger_df_long, party = variable)
# gen party id
ger_df_long$party <- str_extract(ger_df_long$party, "[:alpha:]+")
ger_df_long$party <- str_replace(ger_df_long$party, "cdsu", "cdu")
ger_df_long <- filter(ger_df_long, party != "npd") # drop npd
# gen election id
elections_df <- data.frame(year = unique(ger_df_long$year), election = seq_along(unique(ger_df_long$year)))
ger_df_long <- merge(ger_df_long, elections_df, by = c("year"), all.x = TRUE)
# gen lag vars
ger_df_long <- group_by(ger_df_long, party) %>% arrange(year) %>% mutate(voteshare_l1 = lag(voteshare, 1), voteshare_l2 = lag(voteshare, 2), voteshare_l3 = lag(voteshare, 3), chancellor = lag(chancellor, 1), unemp_l1 = lag(unemp, 1))
# generate swing variable
ger_df_long$swing <- ger_df_long$voteshare - ger_df_long$voteshare_l1
ger_df_long <- group_by(ger_df_long, party) %>% arrange(year) %>% mutate(swing_l1 = lag(swing, 1))
ger_df_long$chancellor_party <- ifelse(ger_df_long$party == ger_df_long$chancellor, 1, 0)
ger_df_long$major <- ifelse(ger_df_long$party == "spd" | ger_df_long$party == "cdu", 1, 0)
ger_df_long <- group_by(ger_df_long, party) %>% arrange(year) %>% mutate(cdsu_gov = lag(cdsu_gov, 1), spd_gov = lag(spd_gov, 1), fdp_gov = lag(fdp_gov, 1), gru_gov = lag(gru_gov, 1))
ger_df_long <- ungroup(ger_df_long)
ger_df_long <- mutate(ger_df_long, gov = ifelse(party == "cdu" & cdsu_gov == 1, 1,
ifelse(party == "spd" & spd_gov == 1, 1,
ifelse(party == "fdp" & fdp_gov == 1, 1,
ifelse(party == "gru" & gru_gov == 1, 1, 0)))))
ger_df_long$parl <- ifelse(ger_df_long$voteshare_l1 >= 5, 1, 0)
ger_df_long$parl[ger_df_long$party ==  "lin" & ger_df_long$year == 1994] <- 1
ger_df_long$parl[ger_df_long$party ==  "lin" & ger_df_long$year == 1998] <- 1
ger_df_long$parl[ger_df_long$party ==  "lin" & ger_df_long$year == 2002] <- 1
ger_df_long$parl[ger_df_long$party ==  "lin" & ger_df_long$year == 2005] <- 1
ger_df_long$unemp_swing <- ger_df_long$unemp - ger_df_long$unemp_l1
ltw_df <- read_dta("./data/election_results_ltw_agg.dta")
ger_df_long <- merge(ger_df_long, ltw_df, by.x = c("year", "party"), by.y = c("election", "party"), all.x = TRUE)
load("../data/polls_df_agg.RData")
load("./data/polls_df_agg.RData")
load("./data/polls_df_agg.RData")
ger_df_long <- merge(ger_df_long, polls_df_agg, by.x = c("year", "party"), by.y = c("election", "party"), all.x = TRUE)
ger_df_long$polls_70_100[is.na(ger_df_long$polls_70_100)] <- ger_df_long$polls_1_30[is.na(ger_df_long$polls_70_100)] # ad hoc replacement of missing polling data with later polling data
ger_df_long$polls_100_130[is.na(ger_df_long$polls_100_130)] <- ger_df_long$polls_70_100[is.na(ger_df_long$polls_100_130)] # ad hoc replacement of missing polling data with later polling data
ger_df_long$polls_170_200[is.na(ger_df_long$polls_170_200)] <- ger_df_long$polls_100_130[is.na(ger_df_long$polls_170_200)] # ad hoc replacement of missing polling data with later polling data
ger_df_long$polls_200_230[is.na(ger_df_long$polls_200_230)] <- ger_df_long$polls_170_200[is.na(ger_df_long$polls_200_230)] # ad hoc replacement of missing polling data with later polling data
ger_df_long$polls_200_230_swing <- ger_df_long$polls_200_230 - ger_df_long$voteshare_l1
ger_df_long$voteshare_l1_3 <- rowMeans(select(ger_df_long, voteshare_l1, voteshare_l2, voteshare_l3), na.rm = TRUE)
ger_df_long <- filter(ger_df_long, voteshare != 0 | is.na(voteshare))
# Zurückliegender Wahlanteil
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(a)", xlim = c(0, 50), ylim = c(0, 50))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 25, "Stimmenanteil (%), letzte Wahl", line = 1, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 25, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ voteshare_l1 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
# Umfragen
plot(ger_df_long$polls_200_230, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(b)", xlim = c(0, 60), ylim = c(0, 60))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 30, "Wahlabsicht in Umfragen, \n200-230 Tage vor der Wahl", line = 2, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 30, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ polls_200_230 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$polls_200_230[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$polls_200_230[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
par(mar=c(3, 15, 3, 11))
# Kanzlerpartei
dat <- filter(ger_df_long, major == 1)
dat$chancellor_party_lab <- ifelse(dat$chancellor_party == 0, "keine Kanzlerpartei", "Kanzlerpartei")
plot(dat$chancellor_party,  dat$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(c)", xlim = c(-.5, 1.5), ylim = c(20, 52))
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(1, seq(0, 1, 1), c("keine Kanzlerpartei", "Kanzlerpartei"), tick = F)
axis(2, 35, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ chancellor_party, data = dat)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(dat$party, dat$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
model_out_aug <- group_by(model_out_aug, chancellor_party) %>% arrange(.std.resid) %>% mutate(label_position = c(4, rep(c(2, 4), 8))) %>% ungroup
obs_id <- abs(model_out_aug$.std.resid) > 1.3
points(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
text(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = model_out_aug$label_position[obs_id], offset = .47)
grid()
pdf(file="figures/structural-predictors.pdf", height=9, width=8, family="URWTimes")
par(oma=c(0,0.5,0.5,0.5))
par(mar=c(4, 4, 3, 0))
par(pty="s")
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
# Zurückliegender Wahlanteil
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(a)", xlim = c(0, 50), ylim = c(0, 50))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 25, "Stimmenanteil (%), letzte Wahl", line = 1, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 25, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ voteshare_l1 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
# Umfragen
plot(ger_df_long$polls_200_230, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(b)", xlim = c(0, 60), ylim = c(0, 60))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 30, "Wahlabsicht in Umfragen, \n200-230 Tage vor der Wahl", line = 2, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 30, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ polls_200_230 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$polls_200_230[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$polls_200_230[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
par(mar=c(3, 15, 3, 11))
# Kanzlerpartei
dat <- filter(ger_df_long, major == 1)
dat$chancellor_party_lab <- ifelse(dat$chancellor_party == 0, "keine Kanzlerpartei", "Kanzlerpartei")
plot(dat$chancellor_party,  dat$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(c)", xlim = c(-.5, 1.5), ylim = c(20, 52))
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(1, seq(0, 1, 1), c("keine Kanzlerpartei", "Kanzlerpartei"), tick = F)
axis(2, 35, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ chancellor_party, data = dat)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(dat$party, dat$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
model_out_aug <- group_by(model_out_aug, chancellor_party) %>% arrange(.std.resid) %>% mutate(label_position = c(4, rep(c(2, 4), 8))) %>% ungroup
obs_id <- abs(model_out_aug$.std.resid) > 1.3
points(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
text(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = model_out_aug$label_position[obs_id], offset = .47)
grid()
dev.off()
source("functions.r")
## plot relationship between response and predictors --------------
pdf(file="figures/structural-predictors.pdf", height=9, width=8, family="URWTimes")
par(oma=c(0,0.5,0.5,0.5))
par(mar=c(4, 4, 3, 0))
par(pty="s")
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
# Zurückliegender Wahlanteil
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(a)", xlim = c(0, 50), ylim = c(0, 50))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 25, "Stimmenanteil (%), letzte Wahl", line = 1, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 25, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ voteshare_l1 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
# Umfragen
plot(ger_df_long$polls_200_230, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(b)", xlim = c(0, 60), ylim = c(0, 60))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 30, "Wahlabsicht in Umfragen, \n200-230 Tage vor der Wahl", line = 2, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 30, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ polls_200_230 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$polls_200_230[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$polls_200_230[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
par(mar=c(3, 15, 3, 11))
# Kanzlerpartei
dat <- filter(ger_df_long, major == 1)
dat$chancellor_party_lab <- ifelse(dat$chancellor_party == 0, "keine Kanzlerpartei", "Kanzlerpartei")
plot(dat$chancellor_party,  dat$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(c)", xlim = c(-.5, 1.5), ylim = c(20, 52))
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(1, seq(0, 1, 1), c("keine Kanzlerpartei", "Kanzlerpartei"), tick = F)
axis(2, 35, "Stimmenanteil (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ chancellor_party, data = dat)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(dat$party, dat$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
model_out_aug <- group_by(model_out_aug, chancellor_party) %>% arrange(.std.resid) %>% mutate(label_position = c(4, rep(c(2, 4), 8))) %>% ungroup
obs_id <- abs(model_out_aug$.std.resid) > 1.3
points(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
text(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = model_out_aug$label_position[obs_id], offset = .47)
grid()
dev.off()
pdf(file="figures/pred_past_voteshare.pdf", height=9, width=8, family="URWTimes")
par(oma=c(0,0.5,0.5,0.5))
par(mar=c(4, 4, 3, 0))
par(pty="s")
# past vote share
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(a)", xlim = c(0, 50), ylim = c(0, 50))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 25, "Lag vote share (%)", line = 1, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 25, "Vote share (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ voteshare_l1 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
dev.off()
pdf(file="figures/pred_past_voteshare.pdf", height=7, width=7, family="URWTimes")
par(oma=c(0,0.5,0.5,0.5))
par(mar=c(4, 4, 3, 0))
par(pty="s")
# past vote share
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(a)", xlim = c(0, 50), ylim = c(0, 50))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 25, "Lag vote share (%)", line = 1, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 25, "Vote share (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ voteshare_l1 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
dev.off()
pdf(file="figures/pred_past_voteshare.pdf", height=7, width=7, family="URWTimes")
par(oma=c(0,0.5,0.5,0.5))
par(mar=c(4, 4, 3, 0))
par(pty="s")
# past vote share
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "", xlim = c(0, 50), ylim = c(0, 50))
axis(1, seq(0, 100, 10), seq(0, 100, 10))
axis(1, 25, "Lag vote share (%)", line = 1, tick = F)
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(2, 25, "Vote share (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ voteshare_l1 - 1, data = ger_df_long)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(ger_df_long$party, ger_df_long$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
obs_id <- abs(model_out_aug$.std.resid) > 1.53
points(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
label_position <- ifelse(model_out_aug$.resid > 0, 3, 1)
text(model_out_aug$voteshare_l1[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = label_position[obs_id], offset = .47)
grid()
dev.off()
summary(ger_df_long)
hist(ger_df_long$voteshare)
names(ger_df_long)
table(ger_df_long$party)
ger_df_long %% group_by(party)
ger_df_long %>% group_by(party)
ger_df_long %>% group_by(party) %>% hist
ger_df_long %>% group_by(party) %>% hist(.$voteshare)
ger_df_long %>% group_by(party) %>% hist(.$turnout)
group_by(party)
foo <- ger_df_long %>% group_by(party)
foo
plot(ger_df_long$voteshare_l1, ger_df_long$voteshare)
table(party)
table(ger_df_long$party)
par(mfrow = c(3, 3))
for (i in unique(party)) {
filter(ger_df_long, party == i) %>% hist(.$voteshare)
}
par(mfrow = c(3, 3))
for (i in unique(ger_df_long$party)) {
filter(ger_df_long, party == i) %>% hist(.$voteshare)
}
names(ger_df_long)
ger_df_long$voteshare
class(ger_df_long$voteshare)
foo <- ger_df_long %>% group_by(party)
foo
foo$voteshare
?hist
ger_df_long %>% group_by(party) %>% hist(voteshare)
ger_df_long %>% group_by(party) %>% hist()
par(mfrow = c(3, 3))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
hist(dat$voteshare)
}
par(mfrow = c(3, 3))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
hist(dat$voteshare, main = i)
}
par(mfrow = c(3, 3))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
hist(dat$voteshare, main = i)
}
unique(ger_df_long$party)
table(ger_df_long$party)
names(ger_df_long)
# make it nicer
pdf(file="figures/pred_past_chancellor.pdf", height=7, width=7, family="URWTimes")
par(oma=c(0,0.5,0.5,0.5))
par(mar=c(4, 4, 3, 0))
par(pty="s")
dat <- filter(ger_df_long, major == 1)
dat$chancellor_party_lab <- ifelse(dat$chancellor_party == 0, "no chancellor party", "chancellor party")
plot(dat$chancellor_party,  dat$voteshare, xaxt = "n", yaxt = "n", xlab = "", ylab = "", main = "(c)", xlim = c(-.5, 1.5), ylim = c(20, 52))
axis(2, seq(0, 100, 10), seq(0, 100, 10))
axis(1, seq(0, 1, 1), c("No chancellor party", "Chancellor party"), tick = F)
axis(2, 35, "Vote share (%)", line = 1, tick = F)
# run model, add regression line
model_out <- lm(voteshare ~ chancellor_party, data = dat)
model_out_aug <- augment(model_out)
model_out_aug$case_label <- paste(dat$party, dat$year, sep = " ") %>% recode_partynames(longnames = FALSE) %>% .[model_out_aug$.rownames %>% num()] %>% recode_years
abline(model_out, lty = 2)
# identify important outliers
model_out_aug <- group_by(model_out_aug, chancellor_party) %>% arrange(.std.resid) %>% mutate(label_position = c(4, rep(c(2, 4), 8))) %>% ungroup
obs_id <- abs(model_out_aug$.std.resid) > 1.3
points(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], pch = 20)
# plot labels of outliers based on resid or cooksd
text(model_out_aug$chancellor_party[obs_id], model_out_aug$voteshare[obs_id], label = model_out_aug$case_label[obs_id], cex = .7, pos = model_out_aug$label_position[obs_id], offset = .47)
grid()
dev.off()
par(mfrow = c(3, 3))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
hist(dat$voteshare, main = i)
}
par(mfrow = c(1, 1))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
hist(dat$voteshare, main = i)
}
par(mfrow = c(2, 2))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
hist(dat$voteshare, main = i)
}
par(mfrow = c(2, 2))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
plot(dat$voteshare, main = i)
}
density(dat$voteshare)
?density
density(dat$voteshare, na.rm = TRUE)
plot(density(dat$voteshare, na.rm = TRUE))
dev.off()
plot(density(dat$voteshare, na.rm = TRUE))
par(mfrow = c(3, 3))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
plot(density(dat$voteshare, na.rm = TRUE), main = i)
}
table(ger_df_long$party)
par(mfrow = c(2, 3))
for (i in unique(ger_df_long$party)) {
dat <- filter(ger_df_long, party == i)
if(nrow(dat > 2)) {
plot(density(dat$voteshare, na.rm = TRUE), main = i)
}
}
ger_df_sub <- select(ger_df_long, voteshare, voteshare_l1, chancellor_party, polls_200_230)
summary(v)
summary(ger_df_sub)
library(xtable)
xtable(ger_df_sub)
xtable(summary(ger_df_sub))
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(ger_df_sub)
?stargazer
stargazer(ger_df_sub, title = "Summary statistics", type = "latex", out = "figures/sumstats.tex")
summary(ger_df_long)
warnings()
plot(ger_df_sub)
table(ger_df_long$party)
names(ger_df_long)
table(ger_df_long$gov)
table(ger_df_long$party, ger_df_long$gov)
### import data ------------------------
load("./data/ger_model_df.RData")
# prepare election ids
election_years <- unique(ger_df_long$year)
election_years_id <- seq_along(election_years)
election_years_df <- data.frame(year = election_years, election_id = election_years_id)
### import data ------------------------
load("./data/ger_model_df.dta")
# prepare election ids
election_years <- unique(ger_df_long$year)
election_years_id <- seq_along(election_years)
election_years_df <- data.frame(year = election_years, election_id = election_years_id)
### run models on full sample -----------
model_out <- lm(swing ~ chancellor_party + voteshare_l1 + polls_200_230, data = ger_df_long)
model_out <- lm(voteshare ~ chancellor_party + voteshare_l1 + polls_200_230, data = ger_df_long)
summary(model_out)
load("./data/ger_model_df.dta")
read_dta("./data/ger_model_df.dta")
ger_df_long <- read_dta("./data/ger_model_df.dta")
# prepare election ids
election_years <- unique(ger_df_long$year)
election_years_id <- seq_along(election_years)
election_years_df <- data.frame(year = election_years, election_id = election_years_id)
### run models on full sample -----------
model_out <- lm(swing ~ chancellor_party + voteshare_l1 + polls_200_230, data = ger_df_long)
model_out <- lm(voteshare ~ chancellor_party + voteshare_l1 + polls_200_230, data = ger_df_long)
summary(model_out)
model_out_fit <- augment(model_out)
model_out_fit$party <- ger_df_long$party[as.numeric(model_out_fit$.rownames)]
model_out_fit$year <- ger_df_long$year[as.numeric(model_out_fit$.rownames)]
mean(abs(model_out_fit$.resid))
group_by(model_out_fit, party) %>% summarize(mae = mean(abs(.resid)))
plot(model_out_fit$.fitted, model_out_fit$voteshare, cex = .5, pch = 20)
text(model_out_fit$.fitted, model_out_fit$voteshare, paste0(model_out_fit$party, str_sub(as.character(model_out_fit$year), -2, -1)), pos = 3, offset = .15, cex = .6)
dev.off()
plot(model_out_fit$.fitted, model_out_fit$voteshare, cex = .5, pch = 20)
text(model_out_fit$.fitted, model_out_fit$voteshare, paste0(model_out_fit$party, str_sub(as.character(model_out_fit$year), -2, -1)), pos = 3, offset = .15, cex = .6)
grid()
abline(0, 1)
abline(v=0)
abline(h=0)
d <- select(ger_df_long, voteshare, voteshare_l1, voteshare_l1_3, polls_200_230, ltw_swing_mean_200_full, chancellor_party, major, gov, parl)
d <- select(ger_df_long, voteshare, voteshare_l1, voteshare_l1_3, polls_200_230,  chancellor_party, major, gov, parl)
dep_var <- 'voteshare'
indep_vars <- setdiff(names(d), dep_var)
lms <- Reduce(append, lapply(seq_along(indep_vars),
function(num_vars) {
Reduce(append, apply(combn(length(indep_vars), num_vars), 2, function(vars) {
formula_string <- paste(c(dep_var, paste(indep_vars[vars], collapse = "+")), collapse = '~')
structure(list(lm(as.formula(formula_string), data = d)), .Names = formula_string)
}))
}
))
length(lms)
lms
sum_tab <- data.frame(model_name = names(lms),
num_vars = sapply(lms, function(x) { x %>% .$coefficients %>% length}) - 1,
#df = sapply(lms, function(x) { summary(x) %>% .$df[2,]}),
r_squared = sapply(lms, function(x) { summary(x) %>% .$r.squared}),
adj_r_squared = sapply(lms, function(x) { summary(x) %>% .$adj.r.squared})
)
sum_tab$ratio <- sum_tab$r_squared / sum_tab$num_vars
i = 2017
lms_best <- lms[sum_tab$r_squared > .35]
lms_best_predictions <- sapply(lms_best, predict.lm, newdata = filter(ger_df_long, year == i)) %>% t() %>% as.data.frame()
lms_best_predictions <- apply(lms_best_predictions, 1, add, filter(ger_df_long, year == i)$voteshare_l1) %>% t() %>% as.data.frame
names(lms_best_predictions) <- filter(ger_df_long, year == i)$party
summary(lms_best_predictions)
lms_best_predictions$vote_sums <- rowSums(lms_best_predictions)
